name: 'Build and Test'
on: # rebuild any PRs and main branch changes
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          npm install
      - run: |
          npm run all
  
  integration-tests:
    runs-on: ubuntu-latest
    if: >
      github.event.repository.default_branch == github.ref_name
        || github.event_name == 'workflow_dispatch'
    permissions:
      contents: write
      actions: write
    env:
      INTEGRATION_TEST_WORKFLOW_FILE: "integration-tests.yml"
      INTEGRATION_TEST_WORKFLOW_ID: 64701969 # This ID Will Change On Fork
    steps:
      - uses: actions/checkout@v3
      - uses: ./
        id: fail-ref-workflow-dispatch
        name: "Dispatch Workflow using workflow_dispatch Method, to a Non-existent Branch"
        continue-on-error: true
        with:
          dispatch-method: "workflow_dispatch"
          repo: "${{ github.event.repository.name }}"
          owner: "${{ github.repository_owner }}"
          ref: "non-existent-branch/${{ github.run_id }}" # This branch cannot realistically exist
          workflow: "${{ env.INTEGRATION_TEST_WORKFLOW_FILE }}"
          token: "${{ secrets.GITHUB_TOKEN }}"
          workflow-inputs: '{"placeholder": "placeholder"}'
      - uses: ./
        id: fail-file-workflow-dispatch
        name: "Dispatch Workflow using workflow_dispatch Method, to a Non-existent Workflow File"
        continue-on-error: true
        with:
          dispatch-method: "workflow_dispatch"
          repo: "${{ github.event.repository.name }}"
          owner: "${{ github.repository_owner }}"
          ref: "main"
          workflow: "${{ github.run_id }}.yml" # This workflow file cannot realistically exist
          token: "${{ secrets.GITHUB_TOKEN }}"
          workflow-inputs: '{"placeholder": "placeholder"}'
      - uses: ./
        id: fail-inputs-workflow-dispatch
        name: "Dispatch Workflow using workflow_dispatch Method, with an unsupported workflow inputs"
        continue-on-error: true
        with:
          dispatch-method: "workflow_dispatch"
          repo: "${{ github.event.repository.name }}"
          owner: "${{ github.repository_owner }}"
          ref: "main"
          workflow: "${{ env.INTEGRATION_TEST_WORKFLOW_FILE }}"
          token: "${{ secrets.GITHUB_TOKEN }}"
          workflow-inputs: '{"placeholder": 0}' # 0 is not a string type
      - id: verify-fail-workflow-dispatch
        name: "Verify Action Outputs for worflow-dispatch"
        shell: bash
        run: |
          set -euo pipefail

          if [[ "${{ steps.fail-ref-workflow-dispatch.outcome }}" != "failure" ]]; then
            >&2 echo "ðŸ”´ fail-ref-workflow-dispatch step was expected to fail"; exit 1
          fi

          if [[ "${{ steps.fail-file-workflow-dispatch.outcome }}" != "failure" ]]; then
            >&2 echo "ðŸ”´ fail-file-workflow-dispatch step was expected to fail"; exit 1
          fi

          if [[ "${{ steps.fail-inputs-workflow-dispatch.outcome }}" != "failure" ]]; then
            >&2 echo "ðŸ”´ fail-inputs-workflow-dispatch step was expected to fail"; exit 1
          fi
      - uses: ./
        id: wait-workflow-dispatch
        name: "Dispatch Using workflow_dispatch Method And Wait For Run-ID"
        with:
          dispatch-method: "workflow_dispatch"
          repo: "${{ github.event.repository.name }}"
          owner: "${{ github.repository_owner }}"
          ref: "refs/heads/main"
          workflow: "${{ env.INTEGRATION_TEST_WORKFLOW_FILE }}"
          token: "${{ secrets.GITHUB_TOKEN }}"
          workflow-inputs: '{"placeholder": "placeholder"}'
          discover: true
      - uses: ./
        id: wait-repository-dispatch
        name: "Dispatch Using repository_dispatch Method And Wait For Run-ID"
        with:
          dispatch-method: "repository_dispatch"
          event-type: "repository-dispatch"
          repo: "${{ github.event.repository.name }}"
          owner: "${{ github.repository_owner }}"
          token: "${{ secrets.GITHUB_TOKEN }}"
          workflow-inputs: '{"placeholder": "placeholder"}'
          discover: true
      - id: verify-repository-dispatch
        name: "Verify Action Outputs for repository-dispatch"
        shell: bash
        run: |
          set -euo pipefail

          # wait-repository-dispatch
          if [[ -z "${{ steps.wait-repository-dispatch.outputs.run-id }}" ]]; then
            >&2 echo "ðŸ”´ wait-repository-dispatch step should output 'run-id'"; exit 1
          fi

          if [[ -z "${{ steps.wait-repository-dispatch.outputs.run-url }}" ]]; then
            >&2 echo "ðŸ”´ wait-repository-dispatch step should output 'run-url'"; exit 1
          fi

          # wait-workflow-dispatch
          if [[ -z "${{ steps.wait-workflow-dispatch.outputs.run-id }}" ]]; then
            >&2 echo "ðŸ”´ wait-workflow-dispatch step should output 'run-id'"; exit 1
          fi

          if [[ -z "${{ steps.wait-workflow-dispatch.outputs.run-url }}" ]]; then
            >&2 echo "ðŸ”´ wait-workflow-dispatch step should output 'run-url'"; exit 1
          fi
      - uses: ./
        id: just-workflow-dispatch
        name: "Just Dispatch Workflow using workflow_dispatch Method"
        with:
          dispatch-method: "workflow_dispatch"
          repo: "${{ github.event.repository.name }}"
          owner: "${{ github.repository_owner }}"
          ref: "main"
          workflow: "${{ env.INTEGRATION_TEST_WORKFLOW_ID }}"
          token: "${{ secrets.GITHUB_TOKEN }}"
          workflow-inputs: '{"placeholder": "placeholder"}'
